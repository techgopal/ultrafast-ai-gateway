# Development Configuration - Groq
# OpenAI-compatible Groq provider for local testing

[server]
host = "127.0.0.1"
port = 3000
timeout = "30s"
max_body_size = 10485760  # 10MB
cors = { enabled = true, allowed_origins = ["*"], allowed_methods = ["GET", "POST", "PUT", "DELETE"], allowed_headers = ["*"] }

# Groq Provider (OpenAI-compatible API)
[providers.groq]
name = "groq"
api_key = ""
base_url = "https://api.groq.com/openai/v1"
timeout = "30s"  # Duration string format
max_retries = 3
retry_delay = "1s"  # Duration string format
enabled = true
model_mapping = { "openai:gpt-oss-120b" = "openai/gpt-oss-120b", "gpt-oss-120b" = "openai/gpt-oss-120b", "openai:gpt-oss-20b" = "openai/gpt-oss-20b", "gpt-oss-20b" = "openai/gpt-oss-20b" }
headers = {}

# For local runs, set via env:
#   export GROQ_API_KEY=...
# or override in file temporarily; do NOT commit secrets.

# Simple routing strategy for single provider
[routing]
strategy = { Single = {} }
health_check_interval = "30s"
failover_threshold = 0.8

# Authentication (disabled for local testing)
[auth]
enabled = false
api_keys = [
    { key = "sk-ultrafast-gateway-key", name = "default", enabled = true, rate_limit = { requests_per_minute = 100, requests_per_hour = 1000, tokens_per_minute = 10000 }, metadata = {} }
]
rate_limiting = { requests_per_minute = 1000, requests_per_hour = 10000, tokens_per_minute = 100000 }

# Caching
[cache]
enabled = true
backend = "Memory"
ttl = "1h"
max_size = 1000

# Logging
[logging]
level = "info"
format = "Pretty"
output = "Stdout"

# Metrics
[metrics]
enabled = true
max_requests = 10000
retention_duration = "1h"
cleanup_interval = "5m"

# Optional plugins
[[plugins]]
name = "cost_tracking"
enabled = true
config = { "track_costs" = true }

[[plugins]]
name = "input_validation"
enabled = true
config = { enabled = true }
