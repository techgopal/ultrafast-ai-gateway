name: Release (crates.io + Docker)

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: read

jobs:
  test:
    name: Lint & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry + build
        uses: Swatinem/rust-cache@v2

      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Test
        run: cargo test --all --all-features --no-fail-fast

  publish-crates:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: test
    if: ${{ secrets.CRATES_IO_TOKEN != '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry + build
        uses: Swatinem/rust-cache@v2

      - name: Extract version from tag
        id: version
        shell: bash
        run: |
          ver="${GITHUB_REF_NAME#v}"
          echo "version=$ver" >> "$GITHUB_OUTPUT"
          echo "Release version: $ver"

      - name: Verify crate versions match tag
        shell: bash
        run: |
          TAG="${{ steps.version.outputs.version }}"
          sed -n 's/^version\s*=\s*"\(.*\)"/ultrafast-models-sdk version: \1/p' ultrafast-models-sdk/Cargo.toml | sed -n 1p
          sed -n 's/^version\s*=\s*"\(.*\)"/ultrafast-gateway version: \1/p' ultrafast-gateway/Cargo.toml | sed -n 1p
          # Optional: enforce match
          if ! grep -q "^version\s*=\s*\"$TAG\"" ultrafast-models-sdk/Cargo.toml; then
            echo "Error: ultrafast-models-sdk version does not match tag $TAG" >&2; exit 1; fi
          if ! grep -q "^version\s*=\s*\"$TAG\"" ultrafast-gateway/Cargo.toml; then
            echo "Error: ultrafast-gateway version does not match tag $TAG" >&2; exit 1; fi

      - name: Publish ultrafast-models-sdk
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: |
          cargo publish -p ultrafast-models-sdk

      - name: Wait for crates.io index update
        run: |
          echo "Sleeping to allow crates.io index to update..."
          sleep 90

      - name: Rewrite gateway dependency to published version
        run: |
          ver="${{ steps.version.outputs.version }}"
          sed -i "s#ultrafast-models-sdk = { path = \"../ultrafast-models-sdk\" }#ultrafast-models-sdk = \"$ver\"#" ultrafast-gateway/Cargo.toml
          echo "Updated dependency in ultrafast-gateway/Cargo.toml to version $ver"

      - name: Publish ultrafast-gateway
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: |
          cargo publish -p ultrafast-gateway

  docker:
    name: Build & Push Docker image (GHCR)
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: version
        shell: bash
        run: |
          ver="${GITHUB_REF_NAME#v}"
          echo "version=$ver" >> "$GITHUB_OUTPUT"

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/ultrafast-ai-gateway:${{ steps.version.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/ultrafast-ai-gateway:latest
          build-args: |
            RUSTFLAGS=-C target-cpu=native


