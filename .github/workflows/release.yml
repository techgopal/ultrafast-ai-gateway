name: Release (crates.io + Docker)

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: read

jobs:
  test:
    name: Lint & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry + build
        uses: Swatinem/rust-cache@v2

      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Test
        run: cargo test --all --all-features --no-fail-fast

  publish-crates:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: test
    # Only run if token is configured; GitHub does not allow referencing secrets in 'if' for top-level jobs with older expression context.
    # Instead, check within steps and skip when missing.
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry + build
        uses: Swatinem/rust-cache@v2

      - name: Extract version from tag
        id: version
        shell: bash
        run: |
          ver="${GITHUB_REF_NAME#v}"
          echo "version=$ver" >> "$GITHUB_OUTPUT"
          echo "Release version: $ver"

      - name: Verify workspace/crate versions match tag
        shell: bash
        run: |
          TAG="${{ steps.version.outputs.version }}"
          echo "Expected tag version: $TAG"
          echo "Checking root workspace version..."
          if ! grep -qE '^version\s*=\s*"'"$TAG"'"' Cargo.toml; then
            echo "Error: root Cargo.toml workspace version does not match tag $TAG" >&2; exit 1; fi
          echo "Checking crate manifests..."
          for f in ultrafast-models-sdk/Cargo.toml ultrafast-gateway/Cargo.toml; do
            echo "- $f"
            if grep -qE '^version\s*=\s*"' "$f"; then
              grep -qE '^version\s*=\s*"'"$TAG"'"' "$f" || { echo "Error: $f version does not match tag $TAG" >&2; exit 1; }
            else
              grep -qE '^version\.workspace\s*=\s*true' "$f" || { echo "Error: $f missing version or workspace version flag" >&2; exit 1; }
            fi
          done

      - name: Check for crates.io token
        id: tokencheck
        shell: bash
        run: |
          if [ -z "${{ secrets.CRATES_IO_TOKEN }}" ]; then
            echo "has_token=false" >> "$GITHUB_OUTPUT"
          else
            echo "has_token=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Publish ultrafast-models-sdk
        if: steps.tokencheck.outputs.has_token == 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: |
          cargo publish -p ultrafast-models-sdk

      - name: Wait for crates.io index update
        if: steps.tokencheck.outputs.has_token == 'true'
        run: |
          echo "Sleeping to allow crates.io index to update..."
          sleep 90

      - name: Rewrite gateway dependency to published version
        if: steps.tokencheck.outputs.has_token == 'true'
        run: |
          ver="${{ steps.version.outputs.version }}"
          sed -i "s#ultrafast-models-sdk = { path = \"../ultrafast-models-sdk\" }#ultrafast-models-sdk = \"$ver\"#" ultrafast-gateway/Cargo.toml
          echo "Updated dependency in ultrafast-gateway/Cargo.toml to version $ver"

      - name: Publish ultrafast-gateway
        if: steps.tokencheck.outputs.has_token == 'true'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: |
          cargo publish -p ultrafast-gateway

  docker:
    name: Build & Push Docker image (GHCR)
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: version
        shell: bash
        run: |
          ver="${GITHUB_REF_NAME#v}"
          echo "version=$ver" >> "$GITHUB_OUTPUT"

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/ultrafast-ai-gateway:${{ steps.version.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/ultrafast-ai-gateway:latest
          build-args: |
            RUSTFLAGS=-C target-cpu=native


