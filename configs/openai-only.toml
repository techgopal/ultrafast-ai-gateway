# OpenAI Only Configuration
# Perfect for OpenAI-focused applications

[server]
host = "127.0.0.1"
port = 3000
timeout = "30s"
max_body_size = 10485760  # 10MB
cors = { enabled = true, allowed_origins = ["*"], allowed_methods = ["GET", "POST", "PUT", "DELETE"], allowed_headers = ["*"] }

# OpenAI Provider
[providers.openai]
name = "openai"
api_key = "sk-your-openai-key"  # Replace with your OpenAI API key
base_url = "https://api.openai.com/v1"
timeout = 30000  # 30 seconds in milliseconds
max_retries = 3
retry_delay = 1000  # 1 second in milliseconds
enabled = true
model_mapping = {}
headers = {}

# Single provider routing
[routing]
strategy = { Single = {} }  # Single provider
health_check_interval = "30s"
failover_threshold = 0.8

# Authentication (enabled)
[auth]
enabled = true
api_keys = [
    { 
        key = "sk-openai-gateway-key", 
        name = "openai-user", 
        enabled = true, 
        rate_limit = { 
            requests_per_minute = 100, 
            requests_per_hour = 1000, 
            tokens_per_minute = 10000 
        }, 
        metadata = { "provider" = "openai" } 
    }
]
rate_limiting = { 
    requests_per_minute = 1000, 
    requests_per_hour = 10000, 
    tokens_per_minute = 100000 
}

# Caching for OpenAI
[cache]
enabled = true
backend = "Memory"
ttl = "1h"
max_size = 1000

# Logging for OpenAI
[logging]
level = "info"
format = "Pretty"
output = "Stdout"

# OpenAI-specific plugins
[[plugins]]
name = "cost_tracking"
enabled = true
config = { "track_costs" = true, "openai_tracking" = true }

[[plugins]]
name = "content_filtering"
enabled = true
config = { "blocked_words" = ["spam", "inappropriate"], "max_input_length" = 8000 } 